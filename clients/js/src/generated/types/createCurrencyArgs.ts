/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import type {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
} from "@metaplex-foundation/umi/serializers";

import { dataEnum, struct, tuple, u64 } from "@metaplex-foundation/umi/serializers";

export type CreateCurrencyArgs = {
  __kind: "V1";
  rewardRange: [bigint, bigint];
  bondRange: [bigint, bigint];
};

export type CreateCurrencyArgsArgs = {
  __kind: "V1";
  rewardRange: [number | bigint, number | bigint];
  bondRange: [number | bigint, number | bigint];
};

export function getCreateCurrencyArgsSerializer(): Serializer<
  CreateCurrencyArgsArgs,
  CreateCurrencyArgs
> {
  return dataEnum<CreateCurrencyArgs>(
    [
      [
        "V1",
        struct<GetDataEnumKindContent<CreateCurrencyArgs, "V1">>([
          ["rewardRange", tuple([u64(), u64()])],
          ["bondRange", tuple([u64(), u64()])],
        ]),
      ],
    ],
    { description: "CreateCurrencyArgs" },
  ) as Serializer<CreateCurrencyArgsArgs, CreateCurrencyArgs>;
}

// Data Enum Helpers.
export function createCurrencyArgs(
  kind: "V1",
  data: GetDataEnumKindContent<CreateCurrencyArgsArgs, "V1">,
): GetDataEnumKind<CreateCurrencyArgsArgs, "V1">;
export function createCurrencyArgs<K extends CreateCurrencyArgsArgs["__kind"]>(
  kind: K,
  data?: any,
): Extract<CreateCurrencyArgsArgs, { __kind: K }> {
  return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) };
}
export function isCreateCurrencyArgs<K extends CreateCurrencyArgs["__kind"]>(
  kind: K,
  value: CreateCurrencyArgs,
): value is CreateCurrencyArgs & { __kind: K } {
  return value.__kind === kind;
}
